Here are available commands:

--------------------  COMMANDS  --------------------
FILE COMMANDS IN YOUR FOLDER:
1. list_files() -> list files in current directory
2. read_file(filename, start_line=0, num_lines=100) -> returns content and number of total lines in file
start_line - line position at which content is taken from file
num_lines - number of lines to take from a file
ensure that you read all required lines of function/block of code before providing an answer
3. write_file(filename, content) -> writes content to a file. Creates new if not exist.
4. delete_file(filename)
5. insert_lines(filename, start_line_number, lines_content):
Example:
insert_lines("myfile.py", 5, ["line 1", "line 2", "line 3"])
6. delete_lines(filename, start_line_number, end_line_number):
7. execute_file(filename) -> executes code in file

Here 'filename' parameter is already appended to active folder for these commands.
Important: read the file after changing it to ensure that the changes were applied correctly.
Active folder for these commands is '{root_path}\model_files'.

FILE COMMANDS IN WHOLE PROJECT:
1. list_directory_in_app(directory) -> directory - full directory path
2. read_file_in_app(file_path, start_line=0, num_lines=100) -> returns content and number of total lines in file
start_line - line position at which content is taken from file
num_lines - number of lines to take from a file
ensure that you read all required lines of function/block of code before providing an answer

The root directory of app is '{root_path}'.

API REQUESTS:
1. send_api_request(url, method='GET', headers=None, params=None, data=None) -> sends api request and returns result in json
    Useful resources that can be accessed with this tool:
        a. Hugging Face - https://huggingface.co:

        /api/models
        query string params: ("search", "author", "filter", "sort", "direction" (-1 for descending sort), "limit", "full", "config")
        Example: https://huggingface.co/api/models?limit=5
        Important: always add 'limit' paramater to avoid gettnig too large response from this endpoint.

        /api/models/{repo_id} 
        /api/models/{repo_id}/revision/{revision}
        Get all information for a specific model.
        headers = ("authorization" : "Bearer $token")

        /api/datasets
        query string params: ("search", "author", "filter", "sort", "direction" (-1 for descending sort), "limit", "full", "config")

        /api/datasets/{repo_id}
        /api/datasets/{repo_id}/revision/{revision} GET
        Get all information for a specific dataset.
        headers = ("authorization" : "Bearer $token", "full" (fetch most dataset data, such as all tags, the files, etc.))


        b. others.

Important: it is possible to find api_keys in secure_information.py file in app root folder.

COMMAND LINE:
1. run_command(command) -> runs command with parameters in Windows command line
Example: run_command('dir /path/to/directory')

Important: tell to user in case your commands give not enough information to achieve your goal, and what additional information from the command is needed.

Skip the 'commands' parameter in case you do not want to execute any commands now.